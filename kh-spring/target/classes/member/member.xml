<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<!-- 테이블의 컬럼명과 vo 객체의 필드명이 서로 다른 경우 -->
	<!-- result column="테이블컬럼명" property="vo필드명" -->
	   <resultMap type="mVo" id="m_vo">
      <result column="m_id" property="mId"/> <!-- member.MemberVo 안에 mId, mName 값이 있음 -->
      <result column="m_name" property="mName"/> <!-- 컬럼명과 필드명이 달랐을 때 매치해주는 역할 -->
   </resultMap>

	
	<!-- selectlist -->
  <select id="temp_select" parameterType="page" resultMap="m_vo" > <!-- mVo conflg.xml에서 별명 지었음-->
   
   </select>
   
   <select id="tot_list_size" parameterType="page" resultType="int"> <!--resultType="Integer" 도 괜찮음-->
      select count(mid) cnt from membervo <!-- 반환된 cnt는 int타입 -->
      <where>
		<foreach collection="findStrList" item="v" open="(" close=")" separator="or">
	          mid like '%${v}%' or email   like '%${v}%' 
	      or  phone like '%${v}%' or address like '%${v}%' or name like '%${v}%'
		</foreach>			
      </where>
   </select>
   
   <select id="select" parameterType="page" resultType="mVo" > <!-- mVo conflg.xml에서 별명 지었음-->
      select * from (
          select rownum no, m.* from (
         select * from membervo 
        <where>
			<foreach collection="findStrList" item="v" open="(" close=")" separator="or">
		          mid like '%${v}%' or email   like '%${v}%' 
		      or  phone like '%${v}%' or address like '%${v}%' or name like '%${v}%'
			</foreach>			
      </where>
         order by name asc) m  
      ) where no between #{startNo} and #{endNo} 
   </select>
   <!-- resultType은 자바의 오브젝트 -->
   
   <insert id="insert" parameterType="mVo"> <!-- insert, update, delete는 resultType 따로 지정 안 함, 무조건 정수형 반환임 -->
      insert into membervo(mid, pwd, name, email, phone, zipcode, address, photo, mdate) 
      values(#{mid}, #{pwd}, #{name}, #{email}, #{phone}, #{zipcode}, #{address}, #{photo}, sysdate)
   </insert>
   
   <update id="update" parameterType="mVo">
      update membervo set 
      name = #{name}, email = #{email}, zipcode = #{zipcode}, address = #{address}, phone = #{phone}
      
      <if test="photo != null">
			, photo= #{photo}
      </if>   
         
      where mid = #{mid} and pwd = #{pwd}
      
   </update>
   
   <delete id="delete" parameterType="mVo">
      delete from membervo where mid = #{mid} and pwd = #{pwd}
   </delete>
   
   <select id="view" parameterType="String" resultType="mVo">
      select * from membervo where mid = #{_parameter} <!-- #{mid} 처리 불가!!!!! -->
   </select>

</mapper>